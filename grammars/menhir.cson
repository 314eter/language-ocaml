'name': 'Menhir'
'fileTypes': ['mly']
'scopeName': 'source.menhir'
'patterns': [
  {'include': '#declaration'}
]
'repository':
  'declaration':
    'patterns': [
      {'include': '#comment'}
      {
        'begin': '%{'
        'beginCaptures':
          '0': {'name': 'keyword.other.code.begin.menhir'}
        'end': '%}'
        'endCaptures':
          '0': {'name': 'keyword.other.code.end.menhir'}
        'patterns': [{'include': 'source.ocaml'}]
      }
      {
        'begin': '(%parameter)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)'
        'patterns': [{'include': 'source.ocaml'}]
      }
      {
        'begin': '(%start|%type)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)([^\\r\\n]+)'
        'endCaptures':
          '2': {'patterns': [{'include': '#lident'}]}
        'patterns': [{'include': 'source.ocaml#typedefs'}]
      }
      {
        'begin': '(%token)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)([^\\r\\n]+)'
        'endCaptures':
          '2': {'patterns': [{'include': '#uident'}]}
        'patterns': [{'include': 'source.ocaml#typedefs'}]
      }
      {
        'match': '(%token|%nonassoc|%left|%right)([^<>\\r\\n]+)'
        'captures':
          '1': {'name': 'keyword.other.directive.menhir'}
          '2': {'patterns': [{'include': '#uident'}]}
      }
      {
        'match': '(%on_error_reduce)([^<>\\r\\n]+)'
        'captures':
          '1': {'name': 'keyword.other.directive.menhir'}
          '2': {'patterns': [{'include': '#lident'}]}
      }
      {
        'begin': '%%'
        'beginCaptures':
          '0': {'name': 'keyword.other.rules.begin.menhir'}
        'end': '%%'
        'endCaptures':
          '0': {'name': 'keyword.other.rules.end.menhir'}
        'patterns': [{'include': '#rule'}]
      }
    ]
  'rule':
    'patterns': [
      {
        'match': '([a-z][a-zA-Z0-9_]*)\\s*(?:\\(([^)]+)\\))?(?=\\s*:)'
        'captures':
          '1': {'name': 'entity.name.function.rule.menhir'}
          '2': {'patterns': [{'include': '#ident'}]}
      }
      {
        'match': '%public|%inline'
        'name': 'keyword.other.directive.menhir'
      }
      {
        'begin': ':|\\|'
        'end': '(?={)'
        'patterns': [
          {'include': '#variable'}
          {'include': '#reference'}
          {'include': '#operator'}
        ]
      }
      {
        'begin': '(?<![\\\'])({)'
        'end': '(})([^\'"*]*)$'
        'endCaptures':
          '2':
            'patterns': [
              {
                'match': '%prec\\b'
                'name': 'keyword.other.directive.menhir'
              }
              {'include': '#uident'}
            ]
        'patterns': [{'include': 'source.ocaml'}]
      }
    ]
  'comment':
    'patterns': [
      {
        'begin': '/[*]'
        'end': '[*]/'
        'name': 'comment.block.menhir'
      }
    ]
  'variable':
    'match': '([a-z][a-zA-Z0-9_]*)\\s*='
    'captures':
      '1':
        'name': 'variable.parameter.value.menhir'
    'patterns': [{'include': '#reference'}]
  'reference':
    'patterns': [
      {'include': '#uident'}
      {'include': '#lident'}
    ]
  'operator':
    'match': '[+*?]'
    'name': 'keyword.operator.menhir'
  'uident':
    'match': '[A-Z][a-zA-Z0-9_]*'
    'name': 'entity.name.tag.token.menhir'
  'lident':
    'match': '[a-z][a-zA-Z0-9_]*'
    'name': 'entity.name.function.rule.menhir'
  'ident':
    'match': '[a-zA-Z][a-zA-Z0-9_]*'
    'name': 'variable.parameter.rule.menhir'
