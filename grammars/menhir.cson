'name': 'Menhir'
'fileTypes': ['mly']
'scopeName': 'source.menhir'
'patterns': [
  { 'include': '#declaration' }
]
'repository':
  'declaration':
    'patterns': [
      {
        'begin': '%{'
        'beginCaptures':
          '0': {'name': 'keyword.other.code.begin.menhir'}
        'end': '%}'
        'endCaptures':
          '0': {'name': 'keyword.other.code.end.menhir'}
        'patterns': [{'include': 'source.ocaml'}]
      }
      {
        'begin': '(%parameter)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)'
        'patterns': [{'include': 'source.ocaml'}]
      }
      {
        'begin': '(%start|%type)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)([^\\r\\n]+)'
        'endCaptures':
          '2': {'patterns': [{'include': '#lident'}]}
        'patterns': [{'include': 'source.ocaml#typedefs'}]
      }
      {
        'begin': '(%token)\\s*(<)'
        'beginCaptures':
          '1': {'name': 'keyword.other.directive.menhir'}
        'end': '(>)([^\\r\\n]+)'
        'endCaptures':
          '2': {'patterns': [{'include': '#uident'}]}
        'patterns': [{'include': 'source.ocaml#typedefs'}]
      }
      {
        'match': '(%token|%nonassoc|%left|%right)([^<>\\r\\n]+)'
        'captures':
          '1': {'name': 'keyword.other.directive.menhir'}
          '2': {'patterns': [{'include': '#uident'}]}
      }
      {
        'begin': '%%'
        'beginCaptures':
          '0': {'name': 'keyword.other.rules.begin.menhir'}
        'end': '%%'
        'endCaptures':
          '0': {'name': 'keyword.other.rules.end.menhir'}
        'patterns': [{'include': '#rule'}]
      }
    ]
  'rule':
    'patterns': [
      {
        'match': '\\(([^)]+)\\)(?=\\s*:)'
        'captures':
          '1': {'patterns': [{'include': '#ident'}]}
      }
      {
        'match': '%public|%inline'
        'name': 'keyword.other.modifier.menhir'
      }
      {'include': '#action'}
      {'include': '#uident'}
      {'include': '#lident'}
    ]
  'action':
    'begin': '(?<![\\\'])({)'
    'end': '(})(?!\\S+)'
    'patterns': [{'include': 'source.ocaml'}]
  'uident':
    'match': '[A-Z][a-zA-Z0-9_]*'
    'name': 'entity.name.tag.token.ocaml'
  'lident':
    'match': '[a-z][a-zA-Z0-9_]*'
    'name': 'entity.name.function.rule.menhir'
  'ident':
    'match': '[a-zA-Z][a-zA-Z0-9_]*'
    'name': 'variable.parameter.rule.menhir'
